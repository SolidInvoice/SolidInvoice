name: Functional Tests

on: [ pull_request ]

jobs:
  functional:
    name: Functional ( PHP ${{ matrix.php }}, MySQL ${{ matrix.mysql }} )

    runs-on: ubuntu-latest

    strategy:
      matrix:
        php: [ '7.3', '7.4', '8.0' ]
        mysql: [ '5.6', '5.7' ]
        include:
          - php: '7.3'
            mysql: '8.0'
            mysql-entrypoint: >-
              --entrypoint sh mysql:8.0 -c "exec docker-entrypoint.sh mysqld --default-authentication-plugin=mysql_native_password"
          - php: '8.0'
            mysql: '8.0'
            mysql-entrypoint: >-
              --entrypoint sh mysql:8.0 -c "exec docker-entrypoint.sh mysqld --default-authentication-plugin=mysql_native_password"
      fail-fast: true

    env:
      SOLIDINVOICE_ENV: test
      SOLIDINVOICE_DEBUG: 1
      PANTHER_NO_HEADLESS: 0
      PANTHER_APP_ENV: test
      PANTHER_NO_SANDBOX: 1
      PANTHER_CHROME_ARGUMENTS: --disable-dev-shm-usage
      database_version: ${{ matrix.mysql }}

    services:
      mysql:
        image: mysql:${{ matrix.mysql }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
          -e MYSQL_ALLOW_EMPTY_PASSWORD=yes
          ${{ matrix.mysql-entrypoint }}

    steps:
      - name: Disable local MySQL server
        run: sudo service mysql stop

      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          ini-values: date.timezone=Africa/Johannesburg, opcache.enable=1, opcache.enable_cli=1, opcache.memory_consumption=256, opcache.max_accelerated_files=32531, opcache.interned_strings_buffer=8, opcache.validate_timestamps=0, opcache.save_comments=1, opcache.fast_shutdown=0
          extensions: intl, gd, opcache, mysql, pdo_mysql, soap, zip, :xdebug
          coverage: none

      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-php-${{ matrix.php }}-composer-${{ hashFiles('composer.json composer.lock') }}
          restore-keys: ${{ runner.os }}-php-${{ matrix.php }}-composer-

      - name: Install dependencies
        run: composer install --ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Detect browser drivers
        run: bin/bdi detect drivers

      - uses: actions/setup-node@v3.4.1
        with:
          node-version: 14

      - run: yarn install

      - run: yarn build

      - name: Run Installation test suite
        timeout-minutes: 15
        run: bin/simple-phpunit --group installation

      - name: Run functional test suite
        timeout-minutes: 30
        run: bin/simple-phpunit --group functional
