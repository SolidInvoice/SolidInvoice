FROM php:7.4-fpm-buster as base

ENV TIMEZONE Europe/Paris
ENV TERM xterm
ENV COMPOSER_ALLOW_SUPERUSER 1
ENV COMPOSER_HTACCESS_PROTECT 0
ENV COMPOSER_NO_INTERACTION 1
ENV NVM_DIR /root/.nvm
ENV NVM_VERSION 0.39.1
ENV NODE_VERSION 14

ARG DEBIAN_FRONTEND=noninteractive

COPY --from=composer:2 /usr/bin/composer /usr/bin/composer

SHELL ["/bin/bash", "-c"]

RUN apt-get update && \
    apt-get install -y apt-utils debconf-utils apt-transport-https && \
    apt-get install -y \
        build-essential \
        ${PHPIZE_DEPS} \
        libicu-dev \
        locales \
        zip \
        unzip \
        unixodbc \
        unixodbc-dev \
        unixodbc-bin \
        libodbc1 \
        odbcinst1debian2 \
        tdsodbc \
        freetds-bin \
        freetds-common \
        freetds-dev \
        libct4 \
        libsybdb5 \
        libxml2 \
        libxslt1-dev \
        libzip-dev \
        curl \
        libcurl4 \
        libedit2 \
        libicu63 \
        git \
        acl \
        curl \
        nano \
        openssh-client \
        bash \
        libmcrypt-dev \
        libxml2-dev \
        freetds-dev \
        gcc \
        zlib1g \
        zlib1g-dev \
        libpng-dev \
        libjpeg-dev \
        autoconf \
        supervisor && \
    pecl install apcu && \
    pecl install xdebug && \
    ln -s /usr/lib/x86_64-linux-gnu/libsybdb.a /usr/lib && \
        docker-php-ext-install -j$(nproc) pdo_mysql opcache bcmath intl gd xsl soap zip && \
        docker-php-ext-enable apcu && \
        curl -1sLf 'https://dl.cloudsmith.io/public/symfony/stable/setup.deb.sh' | bash && \
        apt-get install symfony-cli && \
        symfony local:server:ca:install && \
        mkdir -p $NVM_DIR && \
        curl -o- "https://raw.githubusercontent.com/creationix/nvm/v${NVM_VERSION}/install.sh" | bash && \
        source "$NVM_DIR/nvm.sh" && \
        nvm install ${NODE_VERSION} && nvm use ${NODE_VERSION} && \
        npm install --global yarn && \
        echo "en_US.UTF-8 UTF-8" > /etc/locale.gen && locale-gen && \
        apt-get clean

FROM base

RUN echo "date.timezone=${TIMEZONE}" >> /usr/local/etc/php/php.ini && \
    echo "max_execution_time = 60;" >> /usr/local/etc/php/php.ini && \
    echo "memory_limit = 512M;" >> /usr/local/etc/php/php.ini && \
    echo "short_open_tag = Off;" >> /usr/local/etc/php/php.ini

ADD docker/scripts/run_dev.sh /usr/bin/run
WORKDIR /opt/srv

EXPOSE 8000

VOLUME /opt/srv

ENTRYPOINT []

CMD ["/usr/bin/run"]
